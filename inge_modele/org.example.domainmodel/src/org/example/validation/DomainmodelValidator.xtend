/*
 * generated by Xtext 2.14.0
 */
package org.example.validation

import org.example.domainmodel.InstructionMove
import org.example.domainmodel.DomainmodelPackage
import org.eclipse.xtext.validation.Check
import org.example.domainmodel.InstructionWait

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class DomainmodelValidator extends AbstractDomainmodelValidator {
	


	@Check
	def checkCantSuck(InstructionMove im){
		if(im.from == 4 || im.from == 11){
			error('Impossible to suck here',
				DomainmodelPackage.Literals.INSTRUCTION_MOVE__FROM)
		}
	}
	
	@Check
	def checkCantBlow(InstructionMove im){
		if(im.to < 5){
			error('Impossible to blow here',
				DomainmodelPackage.Literals.INSTRUCTION_MOVE__TO)
		}
	}
	 
	@Check
	def checkCantMove(InstructionMove im){
		if(im.from < 1 || im.from > 11 ) {
			error('Invalid position (good one between 1 and 11)',
				DomainmodelPackage.Literals.INSTRUCTION_MOVE__FROM)
		}
		if(im.to < 1 || im.to > 11 ) {
			error('Invalid position (good one between 1 and 11)',
				DomainmodelPackage.Literals.INSTRUCTION_MOVE__TO)
		}
	}
	
	@Check
	def checkInvalidWaitingTime(InstructionWait iw){
		if(iw.tps < 0) {
			error('Impossible to get back in time. put a value superior to 0',
				DomainmodelPackage.Literals.INSTRUCTION_WAIT__TPS)
		}
		if(iw.tps == 0){
			warning('Not really usefull, you can remove this shit',
				DomainmodelPackage.Literals.INSTRUCTION_WAIT__TPS)
		}
	}
}

