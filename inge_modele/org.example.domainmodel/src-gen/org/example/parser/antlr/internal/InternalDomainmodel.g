/*
 * generated by Xtext 2.14.0
 */
grammar InternalDomainmodel;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.example.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.example.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.example.services.DomainmodelGrammarAccess;

}

@parser::members {

 	private DomainmodelGrammarAccess grammarAccess;

    public InternalDomainmodelParser(TokenStream input, DomainmodelGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "StartPoint";
   	}

   	@Override
   	protected DomainmodelGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleStartPoint
entryRuleStartPoint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStartPointRule()); }
	iv_ruleStartPoint=ruleStartPoint
	{ $current=$iv_ruleStartPoint.current; }
	EOF;

// Rule StartPoint
ruleStartPoint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStartPointAccess().getStartPointAction_0(),
					$current);
			}
		)
		otherlv_1='start'
		{
			newLeafNode(otherlv_1, grammarAccess.getStartPointAccess().getStartKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getStartPointAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStartPointAccess().getInstructionsInstructionParserRuleCall_3_0());
				}
				lv_instructions_3_0=ruleInstruction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStartPointRule());
					}
					add(
						$current,
						"instructions",
						lv_instructions_3_0,
						"org.example.Domainmodel.Instruction");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getStartPointAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleInstruction
entryRuleInstruction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstructionRule()); }
	iv_ruleInstruction=ruleInstruction
	{ $current=$iv_ruleInstruction.current; }
	EOF;

// Rule Instruction
ruleInstruction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getInstructionMoveParserRuleCall_0());
		}
		this_InstructionMove_0=ruleInstructionMove
		{
			$current = $this_InstructionMove_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getInstructionWaitParserRuleCall_1());
		}
		this_InstructionWait_1=ruleInstructionWait
		{
			$current = $this_InstructionWait_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleInstructionMove
entryRuleInstructionMove returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstructionMoveRule()); }
	iv_ruleInstructionMove=ruleInstructionMove
	{ $current=$iv_ruleInstructionMove.current; }
	EOF;

// Rule InstructionMove
ruleInstructionMove returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='move'
		{
			newLeafNode(otherlv_0, grammarAccess.getInstructionMoveAccess().getMoveKeyword_0());
		}
		otherlv_1='from'
		{
			newLeafNode(otherlv_1, grammarAccess.getInstructionMoveAccess().getFromKeyword_1());
		}
		(
			(
				lv_from_2_0=RULE_INT
				{
					newLeafNode(lv_from_2_0, grammarAccess.getInstructionMoveAccess().getFromINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInstructionMoveRule());
					}
					setWithLastConsumed(
						$current,
						"from",
						lv_from_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3='to'
		{
			newLeafNode(otherlv_3, grammarAccess.getInstructionMoveAccess().getToKeyword_3());
		}
		(
			(
				lv_to_4_0=RULE_INT
				{
					newLeafNode(lv_to_4_0, grammarAccess.getInstructionMoveAccess().getToINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInstructionMoveRule());
					}
					setWithLastConsumed(
						$current,
						"to",
						lv_to_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5='qty'
		{
			newLeafNode(otherlv_5, grammarAccess.getInstructionMoveAccess().getQtyKeyword_5());
		}
		(
			(
				lv_qty_6_0=RULE_INT
				{
					newLeafNode(lv_qty_6_0, grammarAccess.getInstructionMoveAccess().getQtyINTTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInstructionMoveRule());
					}
					setWithLastConsumed(
						$current,
						"qty",
						lv_qty_6_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			otherlv_7='through filter'
			{
				newLeafNode(otherlv_7, grammarAccess.getInstructionMoveAccess().getThroughFilterKeyword_7_0());
			}
			(
				(
					lv_filter_8_0=RULE_INT
					{
						newLeafNode(lv_filter_8_0, grammarAccess.getInstructionMoveAccess().getFilterINTTerminalRuleCall_7_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInstructionMoveRule());
						}
						setWithLastConsumed(
							$current,
							"filter",
							lv_filter_8_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleInstructionWait
entryRuleInstructionWait returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstructionWaitRule()); }
	iv_ruleInstructionWait=ruleInstructionWait
	{ $current=$iv_ruleInstructionWait.current; }
	EOF;

// Rule InstructionWait
ruleInstructionWait returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='wait'
		{
			newLeafNode(otherlv_0, grammarAccess.getInstructionWaitAccess().getWaitKeyword_0());
		}
		(
			(
				lv_tps_1_0=RULE_INT
				{
					newLeafNode(lv_tps_1_0, grammarAccess.getInstructionWaitAccess().getTpsINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInstructionWaitRule());
					}
					setWithLastConsumed(
						$current,
						"tps",
						lv_tps_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_2='s'
		{
			newLeafNode(otherlv_2, grammarAccess.getInstructionWaitAccess().getSKeyword_2());
		}
	)
;

// Entry rule entryRuleType
entryRuleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current; }
	EOF;

// Rule Type
ruleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getTypeAccess().getEntityParserRuleCall());
	}
	this_Entity_0=ruleEntity
	{
		$current = $this_Entity_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	iv_ruleEntity=ruleEntity
	{ $current=$iv_ruleEntity.current; }
	EOF;

// Rule Entity
ruleEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='entity'
		{
			newLeafNode(otherlv_0, grammarAccess.getEntityAccess().getEntityKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntityRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='extends'
			{
				newLeafNode(otherlv_2, grammarAccess.getEntityAccess().getExtendsKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEntityRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getEntityAccess().getSuperTypeEntityCrossReference_2_1_0());
					}
				)
			)
		)?
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEntityAccess().getStartPointStartPointParserRuleCall_4_0());
				}
				lv_startPoint_5_0=ruleStartPoint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntityRule());
					}
					set(
						$current,
						"startPoint",
						lv_startPoint_5_0,
						"org.example.Domainmodel.StartPoint");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
