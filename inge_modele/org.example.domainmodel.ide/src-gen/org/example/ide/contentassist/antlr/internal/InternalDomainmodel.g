/*
 * generated by Xtext 2.14.0
 */
grammar InternalDomainmodel;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.example.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.example.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.example.services.DomainmodelGrammarAccess;

}
@parser::members {
	private DomainmodelGrammarAccess grammarAccess;

	public void setGrammarAccess(DomainmodelGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleStartPoint
entryRuleStartPoint
:
{ before(grammarAccess.getStartPointRule()); }
	 ruleStartPoint
{ after(grammarAccess.getStartPointRule()); } 
	 EOF 
;

// Rule StartPoint
ruleStartPoint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStartPointAccess().getGroup()); }
		(rule__StartPoint__Group__0)
		{ after(grammarAccess.getStartPointAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstruction
entryRuleInstruction
:
{ before(grammarAccess.getInstructionRule()); }
	 ruleInstruction
{ after(grammarAccess.getInstructionRule()); } 
	 EOF 
;

// Rule Instruction
ruleInstruction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstructionAccess().getAlternatives()); }
		(rule__Instruction__Alternatives)
		{ after(grammarAccess.getInstructionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstructionMove
entryRuleInstructionMove
:
{ before(grammarAccess.getInstructionMoveRule()); }
	 ruleInstructionMove
{ after(grammarAccess.getInstructionMoveRule()); } 
	 EOF 
;

// Rule InstructionMove
ruleInstructionMove 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstructionMoveAccess().getGroup()); }
		(rule__InstructionMove__Group__0)
		{ after(grammarAccess.getInstructionMoveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstructionWait
entryRuleInstructionWait
:
{ before(grammarAccess.getInstructionWaitRule()); }
	 ruleInstructionWait
{ after(grammarAccess.getInstructionWaitRule()); } 
	 EOF 
;

// Rule InstructionWait
ruleInstructionWait 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstructionWaitAccess().getGroup()); }
		(rule__InstructionWait__Group__0)
		{ after(grammarAccess.getInstructionWaitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getEntityParserRuleCall()); }
		ruleEntity
		{ after(grammarAccess.getTypeAccess().getEntityParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntity
entryRuleEntity
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityAccess().getGroup()); }
		(rule__Entity__Group__0)
		{ after(grammarAccess.getEntityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getInstructionMoveParserRuleCall_0()); }
		ruleInstructionMove
		{ after(grammarAccess.getInstructionAccess().getInstructionMoveParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getInstructionWaitParserRuleCall_1()); }
		ruleInstructionWait
		{ after(grammarAccess.getInstructionAccess().getInstructionWaitParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartPoint__Group__0__Impl
	rule__StartPoint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartPointAccess().getStartPointAction_0()); }
	()
	{ after(grammarAccess.getStartPointAccess().getStartPointAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartPoint__Group__1__Impl
	rule__StartPoint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartPointAccess().getStartKeyword_1()); }
	'start'
	{ after(grammarAccess.getStartPointAccess().getStartKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartPoint__Group__2__Impl
	rule__StartPoint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartPointAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getStartPointAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartPoint__Group__3__Impl
	rule__StartPoint__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartPointAccess().getInstructionsAssignment_3()); }
	(rule__StartPoint__InstructionsAssignment_3)*
	{ after(grammarAccess.getStartPointAccess().getInstructionsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartPoint__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartPointAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getStartPointAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InstructionMove__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionMove__Group__0__Impl
	rule__InstructionMove__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionMove__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionMoveAccess().getMoveKeyword_0()); }
	'move'
	{ after(grammarAccess.getInstructionMoveAccess().getMoveKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionMove__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionMove__Group__1__Impl
	rule__InstructionMove__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionMove__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionMoveAccess().getFromKeyword_1()); }
	'from'
	{ after(grammarAccess.getInstructionMoveAccess().getFromKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionMove__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionMove__Group__2__Impl
	rule__InstructionMove__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionMove__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionMoveAccess().getFromAssignment_2()); }
	(rule__InstructionMove__FromAssignment_2)
	{ after(grammarAccess.getInstructionMoveAccess().getFromAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionMove__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionMove__Group__3__Impl
	rule__InstructionMove__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionMove__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionMoveAccess().getToKeyword_3()); }
	'to'
	{ after(grammarAccess.getInstructionMoveAccess().getToKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionMove__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionMove__Group__4__Impl
	rule__InstructionMove__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionMove__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionMoveAccess().getToAssignment_4()); }
	(rule__InstructionMove__ToAssignment_4)
	{ after(grammarAccess.getInstructionMoveAccess().getToAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionMove__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionMove__Group__5__Impl
	rule__InstructionMove__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionMove__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionMoveAccess().getQtyKeyword_5()); }
	'qty'
	{ after(grammarAccess.getInstructionMoveAccess().getQtyKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionMove__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionMove__Group__6__Impl
	rule__InstructionMove__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionMove__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionMoveAccess().getQtyAssignment_6()); }
	(rule__InstructionMove__QtyAssignment_6)
	{ after(grammarAccess.getInstructionMoveAccess().getQtyAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionMove__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionMove__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionMove__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionMoveAccess().getGroup_7()); }
	(rule__InstructionMove__Group_7__0)?
	{ after(grammarAccess.getInstructionMoveAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InstructionMove__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionMove__Group_7__0__Impl
	rule__InstructionMove__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionMove__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionMoveAccess().getThroughFilterKeyword_7_0()); }
	'through filter'
	{ after(grammarAccess.getInstructionMoveAccess().getThroughFilterKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionMove__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionMove__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionMove__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionMoveAccess().getFilterAssignment_7_1()); }
	(rule__InstructionMove__FilterAssignment_7_1)
	{ after(grammarAccess.getInstructionMoveAccess().getFilterAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InstructionWait__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionWait__Group__0__Impl
	rule__InstructionWait__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionWait__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionWaitAccess().getWaitKeyword_0()); }
	'wait'
	{ after(grammarAccess.getInstructionWaitAccess().getWaitKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionWait__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionWait__Group__1__Impl
	rule__InstructionWait__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionWait__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionWaitAccess().getTpsAssignment_1()); }
	(rule__InstructionWait__TpsAssignment_1)
	{ after(grammarAccess.getInstructionWaitAccess().getTpsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionWait__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionWait__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionWait__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionWaitAccess().getSKeyword_2()); }
	's'
	{ after(grammarAccess.getInstructionWaitAccess().getSKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__0__Impl
	rule__Entity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getEntityKeyword_0()); }
	'entity'
	{ after(grammarAccess.getEntityAccess().getEntityKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__1__Impl
	rule__Entity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getNameAssignment_1()); }
	(rule__Entity__NameAssignment_1)
	{ after(grammarAccess.getEntityAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__2__Impl
	rule__Entity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getGroup_2()); }
	(rule__Entity__Group_2__0)?
	{ after(grammarAccess.getEntityAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__3__Impl
	rule__Entity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__4__Impl
	rule__Entity__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getStartPointAssignment_4()); }
	(rule__Entity__StartPointAssignment_4)
	{ after(grammarAccess.getEntityAccess().getStartPointAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_2__0__Impl
	rule__Entity__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getExtendsKeyword_2_0()); }
	'extends'
	{ after(grammarAccess.getEntityAccess().getExtendsKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getSuperTypeAssignment_2_1()); }
	(rule__Entity__SuperTypeAssignment_2_1)
	{ after(grammarAccess.getEntityAccess().getSuperTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StartPoint__InstructionsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartPointAccess().getInstructionsInstructionParserRuleCall_3_0()); }
		ruleInstruction
		{ after(grammarAccess.getStartPointAccess().getInstructionsInstructionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionMove__FromAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionMoveAccess().getFromINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getInstructionMoveAccess().getFromINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionMove__ToAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionMoveAccess().getToINTTerminalRuleCall_4_0()); }
		RULE_INT
		{ after(grammarAccess.getInstructionMoveAccess().getToINTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionMove__QtyAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionMoveAccess().getQtyINTTerminalRuleCall_6_0()); }
		RULE_INT
		{ after(grammarAccess.getInstructionMoveAccess().getQtyINTTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionMove__FilterAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionMoveAccess().getFilterINTTerminalRuleCall_7_1_0()); }
		RULE_INT
		{ after(grammarAccess.getInstructionMoveAccess().getFilterINTTerminalRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionWait__TpsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionWaitAccess().getTpsINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getInstructionWaitAccess().getTpsINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__SuperTypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getSuperTypeEntityCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getEntityAccess().getSuperTypeEntityIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEntityAccess().getSuperTypeEntityIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getEntityAccess().getSuperTypeEntityCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__StartPointAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getStartPointStartPointParserRuleCall_4_0()); }
		ruleStartPoint
		{ after(grammarAccess.getEntityAccess().getStartPointStartPointParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
